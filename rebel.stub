(c-include "src/rebel.h")
(c-include "src/graphics/sprite.h")
(c-include "src/input/keyboard.h")

(c-declare "
void FreeSprite(Sprite * t){
  free(t);
}

void FreeShader(Shader * t){
  free(t);
}

void FreeVec3(Vec3 * v){
  free(v);
}

Vec3* MakeVec3(float x, float y, float z)
{
  Vec3 * v = (Vec3*)malloc(sizeof(Vec3));
  v->x = x;
  v->y = y;
  v->z = z;
  return v;
}
")

(define-c-enum (e-keys Keys) 
  KEY_UNKNOWN KEY_SPACE KEY_APOSTROPHE KEY_COMMA KEY_MINUS KEY_PERIOD KEY_SLASH KEY_0 KEY_1 KEY_2 KEY_3 KEY_4 KEY_5 KEY_6 KEY_7 KEY_8 KEY_9 KEY_SEMICOLON KEY_EQUAL KEY_A KEY_B KEY_C KEY_D KEY_E KEY_F KEY_G KEY_H KEY_I KEY_J KEY_K KEY_L KEY_M KEY_N KEY_O KEY_P KEY_Q KEY_R KEY_S KEY_T KEY_U KEY_V KEY_W KEY_X KEY_Y KEY_Z KEY_LEFT_BRACKET KEY_BACKSLASH KEY_RIGHT_BRACKET KEY_GRAVE_ACCENT KEY_WORLD_1 KEY_WORLD_2 KEY_ESCAPE KEY_ENTER KEY_TAB KEY_BACKSPACE KEY_INSERT KEY_DELETE KEY_RIGHT KEY_LEFT KEY_DOWN KEY_UP KEY_PAGE_UP KEY_PAGE_DOWN KEY_HOME KEY_END KEY_CAPS_LOCK KEY_SCROLL_LOCK KEY_NUM_LOCK KEY_PRINT_SCREEN KEY_PAUSE KEY_F1 KEY_F2 KEY_F3 KEY_F4 KEY_F5 KEY_F6 KEY_F7 KEY_F8 KEY_F9 KEY_F10 KEY_F11 KEY_F12 KEY_F13 KEY_F14 KEY_F15 KEY_F16 KEY_F17 KEY_F18 KEY_F19 KEY_F20 KEY_F21 KEY_F22 KEY_F23 KEY_F24 KEY_F25 KEY_KP_0 KEY_KP_1 KEY_KP_2 KEY_KP_3 KEY_KP_4 KEY_KP_5 KEY_KP_6 KEY_KP_7 KEY_KP_8 KEY_KP_9 KEY_KP_DECIMAL KEY_KP_DIVIDE KEY_KP_MULTIPLY KEY_KP_SUBTRACT KEY_KP_ADD KEY_KP_ENTER KEY_KP_EQUAL KEY_LEFT_SHIFT KEY_LEFT_CONTROL KEY_LEFT_ALT KEY_LEFT_SUPER KEY_RIGHT_SHIFT KEY_RIGHT_CONTROL KEY_RIGHT_ALT KEY_RIGHT_SUPER KEY_MENU)

(define-c-struct Vec3
  predicate: vec3?
  finalizer: FreeVec3
  (float x vec3-get-x vec3-set-x)
  (float y vec3-get-y vec3-set-y)
  (float z vec3-get-z vec3-set-z))

(define-c (free Vec3) (make-vec3 MakeVec3) (float float float))

(define-c-struct Sprite
  predicate: sprite?
  finalizer: FreeSprite
  (unsigned-int VAO sprite-get-vao sprite-set-vao)
  (unsigned-int VBO sprite-get-vbo sprite-set-vbo)
  (unsigned-int texture sprite-get-texture sprite-set-texture))

(define-c-struct Shader
  predicate: shader?
  finalizer: FreeShader
  (unsigned-int id))

(define-c (struct Sprite) (sprite-create sprite::Create) (string string))
(define-c (struct Shader) (shader-create shader::Create) (string string))
(define-c void (sprite-draw sprite::Draw) (Sprite (reference Vec3) float float (reference Vec3) (maybe-null Shader)))
(define-c bool (is-key-down IsKeyDown) (e-keys))
